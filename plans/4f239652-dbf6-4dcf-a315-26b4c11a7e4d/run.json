{
  "chaoslib-version": "1.43.2",
  "platform": "Linux-6.5.0-1022-azure-x86_64-with-glibc2.35",
  "node": "fv-az1247-497",
  "experiment": {
    "tags": [
      "Kubernetes",
      "Pod"
    ],
    "title": "Delete pods labelled app=producer and review impacts",
    "method": [
      {
        "name": "Run mild traffic into consumer service",
        "type": "action",
        "provider": {
          "func": "run_load_test",
          "type": "python",
          "module": "chaosreliably.activities.load.actions",
          "arguments": {
            "qps": "${qps_W005}",
            "url": "${url_W005}",
            "body": "${body_W005}",
            "host": "${host_W005}",
            "method": "${method_W005}",
            "headers": "${headers_W005}",
            "duration": "${duration_W005}",
            "insecure": "${insecure_W005}",
            "test_name": "${test_name_W005}",
            "content_type": "${content_type_W005}"
          }
        },
        "background": true
      },
      {
        "name": "Delete all pods labelled app=producer",
        "type": "action",
        "provider": {
          "func": "terminate_pods",
          "type": "python",
          "module": "chaosk8s.pod.actions",
          "arguments": {
            "ns": "${ns_M001}",
            "all": "${all_M001}",
            "qty": "${qty_M001}",
            "mode": "${mode_M001}",
            "rand": "${rand_M001}",
            "order": "${order_M001}",
            "grace_period": "${grace_period_M001}",
            "label_selector": "${label_selector_M001}"
          }
        },
        "background": false
      },
      {
        "name": "pause-execution",
        "type": "action",
        "provider": {
          "func": "pause_execution",
          "type": "python",
          "module": "chaosreliably.activities.pauses",
          "arguments": {
            "duration": "${duration_M002}"
          }
        }
      },
      {
        "name": "Get logs for producer pods",
        "type": "probe",
        "provider": {
          "func": "read_pod_logs",
          "type": "python",
          "module": "chaosk8s.pod.probes",
          "arguments": {
            "ns": "${ns_M003}",
            "last": "${last_M003}",
            "from_previous": "${from_previous_M003}",
            "container_name": "${container_name_M003}",
            "label_selector": "${label_selector_M003}"
          }
        }
      },
      {
        "name": "Get logs for consumer pods",
        "type": "probe",
        "provider": {
          "func": "read_pod_logs",
          "type": "python",
          "module": "chaosk8s.pod.probes",
          "arguments": {
            "ns": "${ns_M004}",
            "last": "${last_M004}",
            "from_previous": "${from_previous_M004}",
            "container_name": "${container_name_M004}",
            "label_selector": "${label_selector_M004}"
          }
        }
      }
    ],
    "runtime": {
      "rollbacks": {
        "strategy": "default"
      },
      "hypothesis": {
        "strategy": "default",
        "fail_fast": false,
        "frequency": 1
      }
    },
    "version": "1.0.0",
    "controls": [
      {
        "name": "reliably",
        "provider": {
          "type": "python",
          "module": "chaosreliably.controls.experiment",
          "arguments": {
            "exp_id": "381668ed-eac1-4f4a-8e03-d11b1e5f864c",
            "org_id": "8b5fddfd-1da8-4586-934b-f184f0ef7904"
          }
        }
      }
    ],
    "rollbacks": [],
    "extensions": [
      {
        "name": "chatgpt",
        "messages": [
          {
            "role": "user",
            "content": "How to limit the blast radius of a restarting Kubernetes pod?"
          }
        ],
        "results": [
          {
            "id": "chatcmpl-9gTdogHhuz14K7IpNbdq6aJgpNv29",
            "object": "chat.completion",
            "created": 1719910744,
            "model": "gpt-4o-2024-05-13",
            "choices": [
              {
                "index": 0,
                "message": {
                  "role": "assistant",
                  "content": "To limit the blast radius of a restarting Kubernetes pod during Chaos Engineering experiments, you can take several steps to ensure that the impact is controlled and does not affect the entire system. Here are some strategies:\n\n1. **Namespace Isolation**:\n   - Use Kubernetes namespaces to isolate the resources. Conduct your experiments in a dedicated namespace to ensure that only the resources within that namespace are affected.\n\n2. **Label and Selector Usage**:\n   - Apply specific labels to the pods you want to target and use label selectors in your Chaos Toolkit experiments to ensure only those pods are impacted.\n\n3. **Pod Disruption Budgets (PDB)**:\n   - Define Pod Disruption Budgets to limit the number of pods that can be disrupted at any given time. This helps maintain a minimum number of available pods during disruptions.\n\n4. **Node Affinity and Taints/Tolerations**:\n   - Use node affinity rules and taints/tolerations to control which nodes your pods can be scheduled on. This can help in isolating the impact to specific nodes.\n\n5. **Service Mesh**:\n   - If you are using a service mesh like Istio or Linkerd, you can leverage its traffic management features to reroute traffic away from the affected pods or services.\n\n6. **Chaos Scope Definition**:\n   - Clearly define the scope of your chaos experiment in the Chaos Toolkit configuration. Specify the exact resources (pods, deployments, etc.) that should be targeted.\n\n7. **Gradual Rollout**:\n   - Instead of restarting all targeted pods at once, gradually roll out the chaos experiment by restarting one pod at a time or in small batches.\n\n8. **Readiness and Liveness Probes**:\n   - Ensure that your applications have proper readiness and liveness probes configured so that Kubernetes can manage unhealthy pods effectively.\n\n9. **Resource Quotas and Limits**:\n   - Set resource quotas and limits on namespaces to control the amount of resources that can be consumed, preventing runaway resource usage during experiments.\n\n10. **Monitoring and Alerts**:\n    - Have robust monitoring and alerting in place to quickly detect any unintended consequences of your chaos experiments and take corrective actions promptly.\n\n### Example Chaos Toolkit Experiment\n\nHere is an example of how you might configure a Chaos Toolkit experiment to restart a specific pod with limited blast radius:\n\n```json\n{\n  \"version\": \"1.0.0\",\n  \"title\": \"Restart a specific Kubernetes pod\",\n  \"description\": \"An experiment to restart a specific pod while limiting blast radius\",\n  \"tags\": [\"kubernetes\", \"pod\", \"restart\"],\n  \"steady-state-hypothesis\": {\n    \"title\": \"Ensure service is healthy\",\n    \"probes\": [\n      {\n        \"type\": \"probe\",\n        \"name\": \"service-is-healthy\",\n        \"tolerance\": true,\n        \"provider\": {\n          \"type\": \"http\",\n          \"timeout\": 2000,\n          \"verify_tls\": false,\n          \"url\": \"http://your-service/health\"\n        }\n      }\n    ]\n  },\n  \"method\": [\n    {\n      \"type\": \"action\",\n      \"name\": \"restart-pod\",\n      \"provider\": {\n        \"type\": \"python\",\n        \"module\": \"chaosk8s.pod.actions\",\n        \"func\": \"delete_pods\",\n        \"arguments\": {\n          \"name_pattern\": \"^your-pod-name$\",\n          \"namespace\": \"your-namespace\"\n        }\n      }\n    }\n  ],\n  \"rollbacks\": []\n}\n```\n\nIn this example, the `delete_pods` action targets a specific pod by name pattern within a specified namespace, ensuring that only this pod is restarted during the experiment.\n\nBy following these strategies, you can effectively limit the blast radius of restarting Kubernetes pods during your Chaos Engineering experiments."
                },
                "logprobs": null,
                "finish_reason": "stop"
              }
            ],
            "usage": {
              "prompt_tokens": 92,
              "completion_tokens": 777,
              "total_tokens": 869
            },
            "system_fingerprint": "fp_ce0793330f"
          }
        ]
      },
      {
        "name": "reliablyui",
        "workflow": {
          "method": [
            {
              "suffix": "M001",
              "template": {
                "id": "k8s-pod-terminate_pods",
                "manifest": {
                  "spec": {
                    "type": "experiment",
                    "schema": {
                      "configuration": [
                        {
                          "key": "ns",
                          "help": "",
                          "type": "string",
                          "title": "Namespace",
                          "default": "default",
                          "required": true,
                          "placeholder": null
                        },
                        {
                          "key": "label_selector",
                          "help": "Selectors to target the appropriate pods",
                          "type": "string",
                          "title": "Label Selector",
                          "default": null,
                          "required": true,
                          "placeholder": null
                        },
                        {
                          "key": "qty",
                          "help": "The number of pods to terminate",
                          "type": "integer",
                          "title": "Number of Pods to Terminate",
                          "default": 1,
                          "required": false,
                          "placeholder": null
                        },
                        {
                          "key": "mode",
                          "help": "Either fixed or percentage. With fixed, the quantity is used as the number of pods. With percentage terminates a volume of pods between 1 and 100",
                          "type": "string",
                          "title": "Quantity Selection Mode",
                          "default": "fixed",
                          "required": false,
                          "placeholder": null
                        },
                        {
                          "key": "all",
                          "help": "Terminate all pods matching the selector",
                          "type": "boolean",
                          "title": "Select All Pods",
                          "default": false,
                          "required": false,
                          "placeholder": null
                        },
                        {
                          "key": "rand",
                          "help": "Terminate the number of pods defined by quantity at random within the selected pool of pods",
                          "type": "boolean",
                          "title": "Random Selection",
                          "default": false,
                          "required": false,
                          "placeholder": null
                        },
                        {
                          "key": "order",
                          "help": "How candidate pods are selected: alphabetic or oldest",
                          "type": "string",
                          "title": "Label Selector",
                          "default": "alphabetic",
                          "required": false,
                          "placeholder": null
                        },
                        {
                          "key": "grace_period",
                          "help": "Grace period for pods to complete their shutdown. Leave -1 for the default behavior",
                          "type": "integer",
                          "title": "Grace Period",
                          "default": -1,
                          "required": false,
                          "placeholder": null
                        }
                      ]
                    },
                    "provider": "chaostoolkit",
                    "template": {
                      "tags": [
                        "Kubernetes",
                        "Pod"
                      ],
                      "title": "Terminate a pod gracefully, to simulate a failing condition",
                      "method": [
                        {
                          "name": "terminate-pods",
                          "type": "action",
                          "provider": {
                            "func": "terminate_pods",
                            "type": "python",
                            "module": "chaosk8s.pod.actions",
                            "arguments": {
                              "ns": "${ns}",
                              "all": "${all}",
                              "qty": "${qty}",
                              "mode": "${mode}",
                              "rand": "${rand}",
                              "order": "${order}",
                              "grace_period": "${grace_period}",
                              "label_selector": "${label_selector}"
                            }
                          },
                          "background": false
                        }
                      ],
                      "version": "1.0.0",
                      "extensions": [
                        {
                          "name": "chatgpt",
                          "messages": [
                            {
                              "role": "user",
                              "content": "How to limit the blast radius of a restarting Kubernetes pod?"
                            }
                          ]
                        }
                      ],
                      "description": "This experiment will perform an operation against your system. As this action may cause issues, we suggest you play it against a non-production environment first. These kind of experiments allow you to learn how your system reacts to a given change in its state.",
                      "configuration": {
                        "ns": {
                          "key": "RELIABLY_PARAM_NS",
                          "type": "env",
                          "default": "default",
                          "env_var_type": "str"
                        },
                        "all": {
                          "key": "RELIABLY_PARAM_ALL",
                          "type": "env",
                          "default": false,
                          "env_var_type": "bool"
                        },
                        "qty": {
                          "key": "RELIABLY_PARAM_QTY",
                          "type": "env",
                          "default": 1,
                          "env_var_type": "int"
                        },
                        "mode": {
                          "key": "RELIABLY_PARAM_MODE",
                          "type": "env",
                          "default": "fixed",
                          "env_var_type": "str"
                        },
                        "rand": {
                          "key": "RELIABLY_PARAM_RAND",
                          "type": "env",
                          "default": false,
                          "env_var_type": "bool"
                        },
                        "order": {
                          "key": "RELIABLY_PARAM_ORDER",
                          "type": "env",
                          "default": "alphabetic",
                          "env_var_type": "str"
                        },
                        "grace_period": {
                          "key": "RELIABLY_PARAM_GRACE_PERIOD",
                          "type": "env",
                          "default": -1,
                          "env_var_type": "int"
                        },
                        "label_selector": {
                          "key": "RELIABLY_PARAM_LABEL_SELECTOR",
                          "type": "env",
                          "env_var_type": "str"
                        }
                      },
                      "contributions": {}
                    }
                  },
                  "metadata": {
                    "name": "terminate_pods",
                    "labels": [
                      "Kubernetes",
                      "Pod"
                    ],
                    "annotations": null
                  }
                }
              },
              "background": false,
              "fieldsStatus": [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
              ]
            },
            {
              "suffix": "M002",
              "template": {
                "id": "reliably-pauses-pause_execution",
                "manifest": {
                  "spec": {
                    "type": "experiment",
                    "schema": {
                      "configuration": [
                        {
                          "key": "duration",
                          "help": "",
                          "type": "integer",
                          "title": "Duration",
                          "default": 0,
                          "required": false,
                          "placeholder": ""
                        }
                      ]
                    },
                    "provider": "chaostoolkit",
                    "template": {
                      "tags": [
                        "pauses",
                        "reliability"
                      ],
                      "title": "Pause the execution of the experiment until the resume state has been received.",
                      "method": [
                        {
                          "name": "pause-execution",
                          "type": "action",
                          "provider": {
                            "func": "pause_execution",
                            "type": "python",
                            "module": "chaosreliably.activities.pauses",
                            "arguments": {
                              "duration": "${duration}"
                            }
                          }
                        }
                      ],
                      "version": "1.0.0",
                      "extensions": [],
                      "description": "This experiment will perform an operation against your system. As this action may cause issues, we suggest you play it against a non-production environment first. These kind of experiments allow you to learn how your system reacts to a given change in its state.",
                      "configuration": {
                        "duration": {
                          "key": "RELIABLY_PARAM_DURATION",
                          "type": "env",
                          "default": 0,
                          "env_var_type": "int"
                        }
                      },
                      "contributions": {}
                    }
                  },
                  "metadata": {
                    "name": "pause_execution",
                    "labels": [
                      "pauses",
                      "reliability"
                    ],
                    "annotations": null
                  }
                }
              },
              "background": false,
              "fieldsStatus": [
                true
              ]
            },
            {
              "suffix": "M003",
              "template": {
                "id": "k8s-pod-read_pod_logs",
                "manifest": {
                  "spec": {
                    "type": "experiment",
                    "schema": {
                      "configuration": [
                        {
                          "key": "ns",
                          "help": "",
                          "type": "string",
                          "title": "Namespace",
                          "default": "default",
                          "required": true,
                          "placeholder": null
                        },
                        {
                          "key": "label_selector",
                          "help": "Selectors to target the appropriate pods",
                          "type": "string",
                          "title": "Label selector",
                          "default": "",
                          "required": true,
                          "placeholder": null
                        },
                        {
                          "key": "last",
                          "help": "Either a number of seconds to read back or a string representing a period such 10 minutes",
                          "type": "string",
                          "title": "Period",
                          "default": "30 seconds",
                          "required": false,
                          "placeholder": null
                        },
                        {
                          "key": "from_previous",
                          "help": "Read the logs from the previous incarnation of the pod",
                          "type": "boolean",
                          "title": "Read from Previous Pod",
                          "default": false,
                          "required": false,
                          "placeholder": null
                        },
                        {
                          "key": "container_name",
                          "help": "When a pod is made of several containers, specify the name of the container to read from",
                          "type": "string",
                          "title": "Name of the Container",
                          "default": null,
                          "required": false,
                          "placeholder": null
                        }
                      ]
                    },
                    "provider": "chaostoolkit",
                    "template": {
                      "tags": [
                        "Kubernetes",
                        "Pod"
                      ],
                      "title": "Fetch logs for all the pods matching a name or label selector",
                      "method": [
                        {
                          "name": "read-pod-logs",
                          "type": "probe",
                          "provider": {
                            "func": "read_pod_logs",
                            "type": "python",
                            "module": "chaosk8s.pod.probes",
                            "arguments": {
                              "ns": "${ns}",
                              "last": "${last}",
                              "from_previous": "${from_previous}",
                              "container_name": "${container_name}",
                              "label_selector": "${label_selector}"
                            }
                          }
                        }
                      ],
                      "version": "1.0.0",
                      "extensions": [],
                      "description": "This experiment should perform a non-destructive operation against your system. Still we recommend you try it against a non-production environment. This kind of experiment is useful when you want to measure how your system is performing.",
                      "configuration": {
                        "ns": {
                          "key": "RELIABLY_PARAM_NS",
                          "type": "env",
                          "default": "default",
                          "env_var_type": "str"
                        },
                        "last": {
                          "key": "RELIABLY_PARAM_LAST",
                          "type": "env",
                          "default": "30 seconds",
                          "env_var_type": "str"
                        },
                        "from_previous": {
                          "key": "RELIABLY_PARAM_FROM_PREVIOUS",
                          "type": "env",
                          "default": false,
                          "env_var_type": "bool"
                        },
                        "container_name": {
                          "key": "RELIABLY_PARAM_CONTAINER_NAME",
                          "type": "env",
                          "env_var_type": "str"
                        },
                        "label_selector": {
                          "key": "RELIABLY_PARAM_LABEL_SELECTOR",
                          "type": "env",
                          "default": "",
                          "env_var_type": "str"
                        }
                      },
                      "contributions": {}
                    }
                  },
                  "metadata": {
                    "name": "read_pod_logs",
                    "labels": [
                      "Kubernetes",
                      "Pod"
                    ],
                    "annotations": null
                  }
                }
              },
              "background": false,
              "fieldsStatus": [
                true,
                true,
                true,
                true,
                true
              ]
            },
            {
              "suffix": "M004",
              "template": {
                "id": "k8s-pod-read_pod_logs",
                "manifest": {
                  "spec": {
                    "type": "experiment",
                    "schema": {
                      "configuration": [
                        {
                          "key": "ns",
                          "help": "",
                          "type": "string",
                          "title": "Namespace",
                          "default": "default",
                          "required": true,
                          "placeholder": null
                        },
                        {
                          "key": "label_selector",
                          "help": "Selectors to target the appropriate pods",
                          "type": "string",
                          "title": "Label selector",
                          "default": "",
                          "required": true,
                          "placeholder": null
                        },
                        {
                          "key": "last",
                          "help": "Either a number of seconds to read back or a string representing a period such 10 minutes",
                          "type": "string",
                          "title": "Period",
                          "default": "30 seconds",
                          "required": false,
                          "placeholder": null
                        },
                        {
                          "key": "from_previous",
                          "help": "Read the logs from the previous incarnation of the pod",
                          "type": "boolean",
                          "title": "Read from Previous Pod",
                          "default": false,
                          "required": false,
                          "placeholder": null
                        },
                        {
                          "key": "container_name",
                          "help": "When a pod is made of several containers, specify the name of the container to read from",
                          "type": "string",
                          "title": "Name of the Container",
                          "default": null,
                          "required": false,
                          "placeholder": null
                        }
                      ]
                    },
                    "provider": "chaostoolkit",
                    "template": {
                      "tags": [
                        "Kubernetes",
                        "Pod"
                      ],
                      "title": "Fetch logs for all the pods matching a name or label selector",
                      "method": [
                        {
                          "name": "read-pod-logs",
                          "type": "probe",
                          "provider": {
                            "func": "read_pod_logs",
                            "type": "python",
                            "module": "chaosk8s.pod.probes",
                            "arguments": {
                              "ns": "${ns}",
                              "last": "${last}",
                              "from_previous": "${from_previous}",
                              "container_name": "${container_name}",
                              "label_selector": "${label_selector}"
                            }
                          }
                        }
                      ],
                      "version": "1.0.0",
                      "extensions": [],
                      "description": "This experiment should perform a non-destructive operation against your system. Still we recommend you try it against a non-production environment. This kind of experiment is useful when you want to measure how your system is performing.",
                      "configuration": {
                        "ns": {
                          "key": "RELIABLY_PARAM_NS",
                          "type": "env",
                          "default": "default",
                          "env_var_type": "str"
                        },
                        "last": {
                          "key": "RELIABLY_PARAM_LAST",
                          "type": "env",
                          "default": "30 seconds",
                          "env_var_type": "str"
                        },
                        "from_previous": {
                          "key": "RELIABLY_PARAM_FROM_PREVIOUS",
                          "type": "env",
                          "default": false,
                          "env_var_type": "bool"
                        },
                        "container_name": {
                          "key": "RELIABLY_PARAM_CONTAINER_NAME",
                          "type": "env",
                          "env_var_type": "str"
                        },
                        "label_selector": {
                          "key": "RELIABLY_PARAM_LABEL_SELECTOR",
                          "type": "env",
                          "default": "",
                          "env_var_type": "str"
                        }
                      },
                      "contributions": {}
                    }
                  },
                  "metadata": {
                    "name": "read_pod_logs",
                    "labels": [
                      "Kubernetes",
                      "Pod"
                    ],
                    "annotations": null
                  }
                }
              },
              "background": false,
              "fieldsStatus": [
                true,
                true,
                true,
                true,
                true
              ]
            }
          ],
          "warmup": [
            {
              "suffix": "W005",
              "template": {
                "id": "reliably-load-run_load_test",
                "manifest": {
                  "spec": {
                    "type": "experiment",
                    "schema": {
                      "configuration": [
                        {
                          "key": "url",
                          "help": "",
                          "type": "string",
                          "title": "Target URL",
                          "default": "",
                          "required": true,
                          "placeholder": null
                        },
                        {
                          "key": "duration",
                          "help": "Duration of the entire load test",
                          "type": "integer",
                          "title": "Test Duration",
                          "default": 30,
                          "required": false,
                          "placeholder": null
                        },
                        {
                          "key": "test_name",
                          "help": "Unique name for this particular test.",
                          "type": "string",
                          "title": "Test Name",
                          "default": "load test",
                          "required": false,
                          "placeholder": null
                        },
                        {
                          "key": "qps",
                          "help": "Query per second rate",
                          "type": "integer",
                          "title": "QPS",
                          "default": 5,
                          "required": false,
                          "placeholder": null
                        },
                        {
                          "key": "insecure",
                          "help": "Allow connection to an insecure HTTPS server",
                          "type": "boolean",
                          "title": "Insecure Connection",
                          "default": false,
                          "required": false,
                          "placeholder": null
                        },
                        {
                          "key": "host",
                          "help": "Force this Host header value",
                          "type": "string",
                          "title": "Host Header",
                          "default": "",
                          "required": false,
                          "placeholder": null
                        },
                        {
                          "key": "method",
                          "help": "Use this HTTP method",
                          "type": "string",
                          "title": "Method",
                          "default": "GET",
                          "required": false,
                          "placeholder": null
                        },
                        {
                          "key": "headers",
                          "help": "Comma-separated list of headers",
                          "type": "string",
                          "title": "Headers",
                          "default": "",
                          "required": false,
                          "placeholder": null
                        },
                        {
                          "key": "body",
                          "help": "Content to pass to the request",
                          "type": "string",
                          "title": "Body",
                          "default": "",
                          "required": false,
                          "placeholder": null
                        },
                        {
                          "key": "content_type",
                          "help": "Content-Type of the body request",
                          "type": "string",
                          "title": "Body Content-Type",
                          "default": "",
                          "required": false,
                          "placeholder": null
                        }
                      ]
                    },
                    "related": [
                      {
                        "name": "reliably-pauses-pause_execution",
                        "block": "method"
                      },
                      {
                        "name": "reliably-load-verify_latency_percentile_from_load_test",
                        "block": "hypothesis"
                      }
                    ],
                    "provider": "chaostoolkit",
                    "template": {
                      "tags": [
                        "reliability",
                        "load"
                      ],
                      "title": "Run a load test against a URL",
                      "method": [
                        {
                          "name": "run-load-test",
                          "type": "action",
                          "provider": {
                            "func": "run_load_test",
                            "type": "python",
                            "module": "chaosreliably.activities.load.actions",
                            "arguments": {
                              "qps": "${qps}",
                              "url": "${url}",
                              "body": "${body}",
                              "host": "${host}",
                              "method": "${method}",
                              "headers": "${headers}",
                              "duration": "${duration}",
                              "insecure": "${insecure}",
                              "test_name": "${test_name}",
                              "content_type": "${content_type}"
                            }
                          },
                          "background": true
                        }
                      ],
                      "version": "1.0.0",
                      "extensions": [],
                      "description": "This experiment will perform an operation against your system. As this action may cause issues, we suggest you play it against a non-production environment first. These kind of experiments allow you to learn how your system reacts to a given change in its state.",
                      "configuration": {
                        "qps": {
                          "key": "RELIABLY_PARAM_QPS",
                          "type": "env",
                          "default": 5,
                          "env_var_type": "int"
                        },
                        "url": {
                          "key": "RELIABLY_PARAM_URL",
                          "type": "env",
                          "default": "",
                          "env_var_type": "str"
                        },
                        "body": {
                          "key": "RELIABLY_PARAM_BODY",
                          "type": "env",
                          "default": "",
                          "env_var_type": "str"
                        },
                        "host": {
                          "key": "RELIABLY_PARAM_HOST",
                          "type": "env",
                          "default": "",
                          "env_var_type": "str"
                        },
                        "method": {
                          "key": "RELIABLY_PARAM_METHOD",
                          "type": "env",
                          "default": "GET",
                          "env_var_type": "str"
                        },
                        "headers": {
                          "key": "RELIABLY_PARAM_HEADERS",
                          "type": "env",
                          "default": "",
                          "env_var_type": "str"
                        },
                        "duration": {
                          "key": "RELIABLY_PARAM_DURATION",
                          "type": "env",
                          "default": 30,
                          "env_var_type": "int"
                        },
                        "insecure": {
                          "key": "RELIABLY_PARAM_INSECURE",
                          "type": "env",
                          "default": false,
                          "env_var_type": "bool"
                        },
                        "test_name": {
                          "key": "RELIABLY_PARAM_TEST_NAME",
                          "type": "env",
                          "default": "load test",
                          "env_var_type": "str"
                        },
                        "content_type": {
                          "key": "RELIABLY_PARAM_CONTENT_TYPE",
                          "type": "env",
                          "default": "",
                          "env_var_type": "str"
                        }
                      },
                      "contributions": {}
                    }
                  },
                  "metadata": {
                    "name": "run_load_test",
                    "labels": [
                      "reliability",
                      "load"
                    ],
                    "annotations": null
                  }
                }
              },
              "background": true,
              "fieldsStatus": [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
              ]
            }
          ],
          "rollbacks": [],
          "hypothesis": [
            {
              "suffix": "H005",
              "template": {
                "id": "reliably-load-verify_latency_percentile_from_load_test",
                "manifest": {
                  "spec": {
                    "type": "experiment",
                    "schema": {
                      "configuration": [
                        {
                          "key": "lower_than",
                          "help": "Latency must be lower than this value for the percentile below",
                          "type": "float",
                          "title": "Lower Than",
                          "default": 0.2,
                          "required": true,
                          "placeholder": null
                        },
                        {
                          "key": "percentile",
                          "help": "Percentile to verify",
                          "type": "string",
                          "title": "Percentile",
                          "default": "p99",
                          "required": false,
                          "placeholder": null
                        },
                        {
                          "key": "test_name",
                          "help": "Name of the test that generated the result to verify",
                          "type": "string",
                          "title": "Test Name",
                          "default": "load test",
                          "required": false,
                          "placeholder": null
                        }
                      ]
                    },
                    "related": [
                      {
                        "name": "reliably-load-run_load_test",
                        "block": "method"
                      },
                      {
                        "name": "reliably-pauses-pause_execution",
                        "block": "method"
                      }
                    ],
                    "provider": "chaostoolkit",
                    "template": {
                      "tags": [
                        "reliability",
                        "load"
                      ],
                      "title": "Verify the latency of responses during a load test for a given percentile",
                      "method": [],
                      "version": "1.0.0",
                      "extensions": [],
                      "description": "This experiment should perform a non-destructive operation against your system. Still we recommend you try it against a non-production environment. This kind of experiment is useful when you want to measure how your system is performing.",
                      "configuration": {
                        "test_name": {
                          "key": "RELIABLY_PARAM_TEST_NAME",
                          "type": "env",
                          "default": "load test",
                          "env_var_type": "str"
                        },
                        "lower_than": {
                          "key": "RELIABLY_PARAM_LOWER_THAN",
                          "type": "env",
                          "default": 0.2,
                          "env_var_type": "float"
                        },
                        "percentile": {
                          "key": "RELIABLY_PARAM_PERCENTILE",
                          "type": "env",
                          "default": "p99",
                          "env_var_type": "str"
                        }
                      },
                      "contributions": {},
                      "steady-state-hypothesis": {
                        "title": "Verify the conditions of your system",
                        "probes": [
                          {
                            "name": "verify-latency-percentile-from-load-test",
                            "type": "probe",
                            "provider": {
                              "func": "verify_latency_percentile_from_load_test",
                              "type": "python",
                              "module": "chaosreliably.activities.load.probes",
                              "arguments": {
                                "test_name": "${test_name}",
                                "lower_than": "${lower_than}",
                                "percentile": "${percentile}"
                              }
                            },
                            "tolerance": true,
                            "background": false
                          }
                        ]
                      }
                    }
                  },
                  "metadata": {
                    "name": "verify_latency_percentile_from_load_test",
                    "labels": [
                      "reliability",
                      "load"
                    ],
                    "annotations": null
                  }
                }
              },
              "tolerance": "",
              "background": false,
              "fieldsStatus": [
                true,
                true,
                true,
                true
              ],
              "toleranceType": "string"
            }
          ]
        }
      },
      {
        "name": "reliably",
        "pauses": [
          {
            "before_activity": "pause-execution",
            "start": "2024-07-02T08:59:10.397452+00:00",
            "duration": 30,
            "end": "2024-07-02T08:59:40.945753+00:00"
          }
        ],
        "termination": null,
        "execution_url": "https://app.reliably.com/executions/view/?id=c84d1f29-e3c4-4323-b056-3a185d78f784&exp=381668ed-eac1-4f4a-8e03-d11b1e5f864c",
        "extra": [
          {
            "type": "url",
            "provider": "github",
            "topic": "commit",
            "value": "https://github.com/HelloReliably/resilience/tree/main/plans/4f239652-dbf6-4dcf-a315-26b4c11a7e4d"
          },
          {
            "type": "url",
            "provider": "github",
            "topic": "repo",
            "value": "https://github.com/HelloReliably/resilience"
          },
          {
            "type": "url",
            "provider": "github",
            "topic": "run",
            "value": "https://github.com/HelloReliably/resilience/actions/runs/9757986478"
          }
        ],
        "chaostoolkit_extensions": [
          {
            "name": "chaostoolkit-reliably",
            "version": "0.79.0"
          },
          {
            "name": "chaostoolkit-kubernetes",
            "version": "0.39.0"
          }
        ],
        "captures": {
          "slack": {
            "channels": [
              {
                "id": "C057K7HCV7A",
                "name": "#acme",
                "conversation": [
                  {
                    "user": "U03A1BN3RDX",
                    "type": "message",
                    "ts": "1719910746.257869",
                    "edited": {
                      "user": "B039NNX8GRH",
                      "ts": "1719910787.000000"
                    },
                    "bot_id": "B039NNX8GRH",
                    "app_id": "A039KSG18TX",
                    "text": "Experiment is finished",
                    "team": "T1FBR1CTW",
                    "bot_profile": {
                      "id": "B039NNX8GRH",
                      "deleted": false,
                      "name": "Reliably",
                      "updated": 1676033731,
                      "app_id": "A039KSG18TX",
                      "icons": {
                        "image_36": "https://avatars.slack-edge.com/2023-02-10/4783667364754_b7e9046da8d775791dd7_36.png",
                        "image_48": "https://avatars.slack-edge.com/2023-02-10/4783667364754_b7e9046da8d775791dd7_48.png",
                        "image_72": "https://avatars.slack-edge.com/2023-02-10/4783667364754_b7e9046da8d775791dd7_72.png"
                      },
                      "team_id": "T1FBR1CTW"
                    },
                    "thread_ts": "1719910746.257869",
                    "reply_count": 11,
                    "reply_users_count": 1,
                    "latest_reply": "1719910787.568149",
                    "reply_users": [
                      "U03A1BN3RDX"
                    ],
                    "is_locked": false,
                    "subscribed": false,
                    "attachments": [
                      {
                        "id": 1,
                        "blocks": [
                          {
                            "type": "section",
                            "block_id": "oiSs2",
                            "text": {
                              "type": "mrkdwn",
                              "text": "*Delete pods labelled app=producer and review impacts*",
                              "verbatim": false
                            }
                          },
                          {
                            "type": "context",
                            "block_id": "7H6m0",
                            "elements": [
                              {
                                "type": "mrkdwn",
                                "text": "*Host:* fv-az1247-497\n*State:* Completed successfully",
                                "verbatim": false
                              }
                            ]
                          }
                        ],
                        "color": "#06FF00",
                        "fallback": "Experiment is finished"
                      }
                    ],
                    "blocks": [
                      {
                        "type": "rich_text",
                        "block_id": "xP3",
                        "elements": [
                          {
                            "type": "rich_text_section",
                            "elements": [
                              {
                                "type": "text",
                                "text": "Experiment is finished"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ],
                "threads": {}
              }
            ],
            "users": {}
          }
        }
      }
    ],
    "description": "This experiment will perform an operation against your system. As this action may cause issues, we suggest you play it against a non-production environment first. These kind of experiments allow you to learn how your system reacts to a given change in its state.",
    "configuration": {
      "ns_M001": {
        "key": "RELIABLY_PARAM_NS_M001",
        "type": "env",
        "default": "default",
        "env_var_type": "str"
      },
      "ns_M003": {
        "key": "RELIABLY_PARAM_NS_M003",
        "type": "env",
        "default": "default",
        "env_var_type": "str"
      },
      "ns_M004": {
        "key": "RELIABLY_PARAM_NS_M004",
        "type": "env",
        "default": "default",
        "env_var_type": "str"
      },
      "all_M001": {
        "key": "RELIABLY_PARAM_ALL_M001",
        "type": "env",
        "default": false,
        "env_var_type": "bool"
      },
      "qps_W005": {
        "key": "RELIABLY_PARAM_QPS_W005",
        "type": "env",
        "default": 10,
        "env_var_type": "int"
      },
      "qty_M001": {
        "key": "RELIABLY_PARAM_QTY_M001",
        "type": "env",
        "default": 2,
        "env_var_type": "int"
      },
      "url_W005": {
        "key": "RELIABLY_PARAM_URL_W005",
        "type": "env",
        "default": "https://demo.reliably.dev/consumer/data",
        "env_var_type": "str"
      },
      "body_W005": {
        "key": "RELIABLY_PARAM_BODY_W005",
        "type": "env",
        "default": "",
        "env_var_type": "str"
      },
      "host_W005": {
        "key": "RELIABLY_PARAM_HOST_W005",
        "type": "env",
        "default": "",
        "env_var_type": "str"
      },
      "last_M003": {
        "key": "RELIABLY_PARAM_LAST_M003",
        "type": "env",
        "default": "60 seconds",
        "env_var_type": "str"
      },
      "last_M004": {
        "key": "RELIABLY_PARAM_LAST_M004",
        "type": "env",
        "default": "60 seconds",
        "env_var_type": "str"
      },
      "mode_M001": {
        "key": "RELIABLY_PARAM_MODE_M001",
        "type": "env",
        "default": "fixed",
        "env_var_type": "str"
      },
      "rand_M001": {
        "key": "RELIABLY_PARAM_RAND_M001",
        "type": "env",
        "default": false,
        "env_var_type": "bool"
      },
      "order_M001": {
        "key": "RELIABLY_PARAM_ORDER_M001",
        "type": "env",
        "default": "alphabetic",
        "env_var_type": "str"
      },
      "method_W005": {
        "key": "RELIABLY_PARAM_METHOD_W005",
        "type": "env",
        "default": "GET",
        "env_var_type": "str"
      },
      "headers_W005": {
        "key": "RELIABLY_PARAM_HEADERS_W005",
        "type": "env",
        "default": "",
        "env_var_type": "str"
      },
      "duration_M002": {
        "key": "RELIABLY_PARAM_DURATION_M002",
        "type": "env",
        "default": 30,
        "env_var_type": "int"
      },
      "duration_W005": {
        "key": "RELIABLY_PARAM_DURATION_W005",
        "type": "env",
        "default": 60,
        "env_var_type": "int"
      },
      "insecure_W005": {
        "key": "RELIABLY_PARAM_INSECURE_W005",
        "type": "env",
        "default": false,
        "env_var_type": "bool"
      },
      "test_name_H005": {
        "key": "RELIABLY_PARAM_TEST_NAME_H005",
        "type": "env",
        "default": "load test",
        "env_var_type": "str"
      },
      "test_name_W005": {
        "key": "RELIABLY_PARAM_TEST_NAME_W005",
        "type": "env",
        "default": "load test",
        "env_var_type": "str"
      },
      "lower_than_H005": {
        "key": "RELIABLY_PARAM_LOWER_THAN_H005",
        "type": "env",
        "default": 0.5,
        "env_var_type": "float"
      },
      "percentile_H005": {
        "key": "RELIABLY_PARAM_PERCENTILE_H005",
        "type": "env",
        "default": "p99",
        "env_var_type": "str"
      },
      "content_type_W005": {
        "key": "RELIABLY_PARAM_CONTENT_TYPE_W005",
        "type": "env",
        "default": "",
        "env_var_type": "str"
      },
      "grace_period_M001": {
        "key": "RELIABLY_PARAM_GRACE_PERIOD_M001",
        "type": "env",
        "default": -1,
        "env_var_type": "int"
      },
      "from_previous_M003": {
        "key": "RELIABLY_PARAM_FROM_PREVIOUS_M003",
        "type": "env",
        "default": false,
        "env_var_type": "bool"
      },
      "from_previous_M004": {
        "key": "RELIABLY_PARAM_FROM_PREVIOUS_M004",
        "type": "env",
        "default": false,
        "env_var_type": "bool"
      },
      "container_name_M003": {
        "key": "RELIABLY_PARAM_CONTAINER_NAME_M003",
        "type": "env",
        "default": "",
        "env_var_type": "str"
      },
      "container_name_M004": {
        "key": "RELIABLY_PARAM_CONTAINER_NAME_M004",
        "type": "env",
        "default": "",
        "env_var_type": "str"
      },
      "label_selector_M001": {
        "key": "RELIABLY_PARAM_LABEL_SELECTOR_M001",
        "type": "env",
        "default": "app=producer",
        "env_var_type": "str"
      },
      "label_selector_M003": {
        "key": "RELIABLY_PARAM_LABEL_SELECTOR_M003",
        "type": "env",
        "default": "app=producer",
        "env_var_type": "str"
      },
      "label_selector_M004": {
        "key": "RELIABLY_PARAM_LABEL_SELECTOR_M004",
        "type": "env",
        "default": "app=consumer",
        "env_var_type": "str"
      },
      "slack_extra": [
        "<https://app.reliably.com/executions/view/?id=c84d1f29-e3c4-4323-b056-3a185d78f784&exp=381668ed-eac1-4f4a-8e03-d11b1e5f864c|View Reliably Execution>"
      ]
    },
    "contributions": {
      "errors": "high",
      "latency": "high",
      "security": "none",
      "availability": "high"
    },
    "steady-state-hypothesis": {
      "title": "Steady-State Hypothesis",
      "probes": []
    }
  },
  "start": "2024-07-02T08:59:03.814603+00:00",
  "status": "completed",
  "deviated": false,
  "steady_states": {
    "before": null,
    "after": null,
    "during": []
  },
  "run": [
    {
      "activity": {
        "name": "Delete all pods labelled app=producer",
        "type": "action",
        "provider": {
          "func": "terminate_pods",
          "type": "python",
          "module": "chaosk8s.pod.actions",
          "arguments": {
            "ns": "${ns_M001}",
            "all": "${all_M001}",
            "qty": "${qty_M001}",
            "mode": "${mode_M001}",
            "rand": "${rand_M001}",
            "order": "${order_M001}",
            "grace_period": "${grace_period_M001}",
            "label_selector": "${label_selector_M001}"
          }
        },
        "background": false
      },
      "output": null,
      "start": "2024-07-02T08:59:06.592619+00:00",
      "status": "failed",
      "exception": [
        "Traceback (most recent call last):\n",
        "  File \"/home/runner/work/resilience/resilience/.venv/lib/python3.11/site-packages/chaoslib/provider/python.py\", line 56, in run_python_activity\n    return func(**arguments)\n           ^^^^^^^^^^^^^^^^^\n",
        "  File \"/home/runner/work/resilience/resilience/.venv/lib/python3.11/site-packages/chaosk8s/pod/actions.py\", line 65, in terminate_pods\n    pods = _select_pods(\n           ^^^^^^^^^^^^^\n",
        "  File \"/home/runner/work/resilience/resilience/.venv/lib/python3.11/site-packages/chaosk8s/pod/actions.py\", line 235, in _select_pods\n    ret = v1.list_namespaced_pod(ns, label_selector=label_selector)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
        "  File \"/home/runner/work/resilience/resilience/.venv/lib/python3.11/site-packages/kubernetes/client/api/core_v1_api.py\", line 15823, in list_namespaced_pod\n    return self.list_namespaced_pod_with_http_info(namespace, **kwargs)  # noqa: E501\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
        "  File \"/home/runner/work/resilience/resilience/.venv/lib/python3.11/site-packages/kubernetes/client/api/core_v1_api.py\", line 15942, in list_namespaced_pod_with_http_info\n    return self.api_client.call_api(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n",
        "  File \"/home/runner/work/resilience/resilience/.venv/lib/python3.11/site-packages/kubernetes/client/api_client.py\", line 348, in call_api\n    return self.__call_api(resource_path, method,\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
        "  File \"/home/runner/work/resilience/resilience/.venv/lib/python3.11/site-packages/kubernetes/client/api_client.py\", line 180, in __call_api\n    response_data = self.request(\n                    ^^^^^^^^^^^^^\n",
        "  File \"/home/runner/work/resilience/resilience/.venv/lib/python3.11/site-packages/kubernetes/client/api_client.py\", line 373, in request\n    return self.rest_client.GET(url,\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n",
        "  File \"/home/runner/work/resilience/resilience/.venv/lib/python3.11/site-packages/kubernetes/client/rest.py\", line 244, in GET\n    return self.request(\"GET\", url,\n           ^^^^^^^^^^^^^^^^^^^^^^^^\n",
        "  File \"/home/runner/work/resilience/resilience/.venv/lib/python3.11/site-packages/kubernetes/client/rest.py\", line 238, in request\n    raise ApiException(http_resp=r)\n",
        "kubernetes.client.exceptions.ApiException: (401)\nReason: Unauthorized\nHTTP response headers: HTTPHeaderDict({'Audit-Id': '30b0bcc6-967e-4a05-b401-b2eb70796767', 'Cache-Control': 'no-cache, private', 'Content-Type': 'application/json', 'Date': 'Tue, 02 Jul 2024 08:59:07 GMT', 'Content-Length': '129'})\nHTTP response body: {\"kind\":\"Status\",\"apiVersion\":\"v1\",\"metadata\":{},\"status\":\"Failure\",\"message\":\"Unauthorized\",\"reason\":\"Unauthorized\",\"code\":401}\n\n\n",
        "\nDuring handling of the above exception, another exception occurred:\n\n",
        "chaoslib.exceptions.ActivityFailed: kubernetes.client.exceptions.ApiException: (401)\nReason: Unauthorized\nHTTP response headers: HTTPHeaderDict({'Audit-Id': '30b0bcc6-967e-4a05-b401-b2eb70796767', 'Cache-Control': 'no-cache, private', 'Content-Type': 'application/json', 'Date': 'Tue, 02 Jul 2024 08:59:07 GMT', 'Content-Length': '129'})\nHTTP response body: {\"kind\":\"Status\",\"apiVersion\":\"v1\",\"metadata\":{},\"status\":\"Failure\",\"message\":\"Unauthorized\",\"reason\":\"Unauthorized\",\"code\":401}\n"
      ],
      "end": "2024-07-02T08:59:07.803091+00:00",
      "duration": 1.210472
    },
    {
      "activity": {
        "name": "Run mild traffic into consumer service",
        "type": "action",
        "provider": {
          "func": "run_load_test",
          "type": "python",
          "module": "chaosreliably.activities.load.actions",
          "arguments": {
            "qps": "${qps_W005}",
            "url": "${url_W005}",
            "body": "${body_W005}",
            "host": "${host_W005}",
            "method": "${method_W005}",
            "headers": "${headers_W005}",
            "duration": "${duration_W005}",
            "insecure": "${insecure_W005}",
            "test_name": "${test_name_W005}",
            "content_type": "${content_type_W005}"
          }
        },
        "background": true
      },
      "output": null,
      "start": "2024-07-02T08:59:06.607497+00:00",
      "status": "failed",
      "exception": [
        "Traceback (most recent call last):\n",
        "  File \"/home/runner/work/resilience/resilience/.venv/lib/python3.11/site-packages/chaoslib/provider/python.py\", line 56, in run_python_activity\n    return func(**arguments)\n           ^^^^^^^^^^^^^^^^^\n",
        "  File \"/home/runner/work/resilience/resilience/.venv/lib/python3.11/site-packages/chaosreliably/activities/load/actions.py\", line 205, in run_load_test\n    raise ActivityFailed(\"missing load test dependency\")\n",
        "chaoslib.exceptions.ActivityFailed: missing load test dependency\n",
        "\nDuring handling of the above exception, another exception occurred:\n\n",
        "chaoslib.exceptions.ActivityFailed: chaoslib.exceptions.ActivityFailed: missing load test dependency\n"
      ],
      "end": "2024-07-02T08:59:07.341795+00:00",
      "duration": 0.734298
    },
    {
      "activity": {
        "name": "pause-execution",
        "type": "action",
        "provider": {
          "func": "pause_execution",
          "type": "python",
          "module": "chaosreliably.activities.pauses",
          "arguments": {
            "duration": "${duration_M002}"
          }
        }
      },
      "output": null,
      "start": "2024-07-02T08:59:09.653033+00:00",
      "status": "succeeded",
      "end": "2024-07-02T08:59:40.945728+00:00",
      "duration": 31.292695
    },
    {
      "activity": {
        "name": "Get logs for producer pods",
        "type": "probe",
        "provider": {
          "func": "read_pod_logs",
          "type": "python",
          "module": "chaosk8s.pod.probes",
          "arguments": {
            "ns": "${ns_M003}",
            "last": "${last_M003}",
            "from_previous": "${from_previous_M003}",
            "container_name": "${container_name_M003}",
            "label_selector": "${label_selector_M003}"
          }
        }
      },
      "output": null,
      "start": "2024-07-02T08:59:42.763921+00:00",
      "status": "failed",
      "exception": [
        "Traceback (most recent call last):\n",
        "  File \"/home/runner/work/resilience/resilience/.venv/lib/python3.11/site-packages/chaoslib/provider/python.py\", line 56, in run_python_activity\n    return func(**arguments)\n           ^^^^^^^^^^^^^^^^^\n",
        "  File \"/home/runner/work/resilience/resilience/.venv/lib/python3.11/site-packages/chaosk8s/pod/probes.py\", line 55, in read_pod_logs\n    ret = v1.list_namespaced_pod(ns, label_selector=label_selector)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
        "  File \"/home/runner/work/resilience/resilience/.venv/lib/python3.11/site-packages/kubernetes/client/api/core_v1_api.py\", line 15823, in list_namespaced_pod\n    return self.list_namespaced_pod_with_http_info(namespace, **kwargs)  # noqa: E501\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
        "  File \"/home/runner/work/resilience/resilience/.venv/lib/python3.11/site-packages/kubernetes/client/api/core_v1_api.py\", line 15942, in list_namespaced_pod_with_http_info\n    return self.api_client.call_api(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n",
        "  File \"/home/runner/work/resilience/resilience/.venv/lib/python3.11/site-packages/kubernetes/client/api_client.py\", line 348, in call_api\n    return self.__call_api(resource_path, method,\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
        "  File \"/home/runner/work/resilience/resilience/.venv/lib/python3.11/site-packages/kubernetes/client/api_client.py\", line 180, in __call_api\n    response_data = self.request(\n                    ^^^^^^^^^^^^^\n",
        "  File \"/home/runner/work/resilience/resilience/.venv/lib/python3.11/site-packages/kubernetes/client/api_client.py\", line 373, in request\n    return self.rest_client.GET(url,\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n",
        "  File \"/home/runner/work/resilience/resilience/.venv/lib/python3.11/site-packages/kubernetes/client/rest.py\", line 244, in GET\n    return self.request(\"GET\", url,\n           ^^^^^^^^^^^^^^^^^^^^^^^^\n",
        "  File \"/home/runner/work/resilience/resilience/.venv/lib/python3.11/site-packages/kubernetes/client/rest.py\", line 238, in request\n    raise ApiException(http_resp=r)\n",
        "kubernetes.client.exceptions.ApiException: (401)\nReason: Unauthorized\nHTTP response headers: HTTPHeaderDict({'Audit-Id': '7ae912f6-bc10-4c76-9ba3-96d7f3264397', 'Cache-Control': 'no-cache, private', 'Content-Type': 'application/json', 'Date': 'Tue, 02 Jul 2024 08:59:43 GMT', 'Content-Length': '129'})\nHTTP response body: {\"kind\":\"Status\",\"apiVersion\":\"v1\",\"metadata\":{},\"status\":\"Failure\",\"message\":\"Unauthorized\",\"reason\":\"Unauthorized\",\"code\":401}\n\n\n",
        "\nDuring handling of the above exception, another exception occurred:\n\n",
        "chaoslib.exceptions.ActivityFailed: kubernetes.client.exceptions.ApiException: (401)\nReason: Unauthorized\nHTTP response headers: HTTPHeaderDict({'Audit-Id': '7ae912f6-bc10-4c76-9ba3-96d7f3264397', 'Cache-Control': 'no-cache, private', 'Content-Type': 'application/json', 'Date': 'Tue, 02 Jul 2024 08:59:43 GMT', 'Content-Length': '129'})\nHTTP response body: {\"kind\":\"Status\",\"apiVersion\":\"v1\",\"metadata\":{},\"status\":\"Failure\",\"message\":\"Unauthorized\",\"reason\":\"Unauthorized\",\"code\":401}\n"
      ],
      "end": "2024-07-02T08:59:43.772523+00:00",
      "duration": 1.008602
    },
    {
      "activity": {
        "name": "Get logs for consumer pods",
        "type": "probe",
        "provider": {
          "func": "read_pod_logs",
          "type": "python",
          "module": "chaosk8s.pod.probes",
          "arguments": {
            "ns": "${ns_M004}",
            "last": "${last_M004}",
            "from_previous": "${from_previous_M004}",
            "container_name": "${container_name_M004}",
            "label_selector": "${label_selector_M004}"
          }
        }
      },
      "output": null,
      "start": "2024-07-02T08:59:45.040266+00:00",
      "status": "failed",
      "exception": [
        "Traceback (most recent call last):\n",
        "  File \"/home/runner/work/resilience/resilience/.venv/lib/python3.11/site-packages/chaoslib/provider/python.py\", line 56, in run_python_activity\n    return func(**arguments)\n           ^^^^^^^^^^^^^^^^^\n",
        "  File \"/home/runner/work/resilience/resilience/.venv/lib/python3.11/site-packages/chaosk8s/pod/probes.py\", line 55, in read_pod_logs\n    ret = v1.list_namespaced_pod(ns, label_selector=label_selector)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
        "  File \"/home/runner/work/resilience/resilience/.venv/lib/python3.11/site-packages/kubernetes/client/api/core_v1_api.py\", line 15823, in list_namespaced_pod\n    return self.list_namespaced_pod_with_http_info(namespace, **kwargs)  # noqa: E501\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
        "  File \"/home/runner/work/resilience/resilience/.venv/lib/python3.11/site-packages/kubernetes/client/api/core_v1_api.py\", line 15942, in list_namespaced_pod_with_http_info\n    return self.api_client.call_api(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n",
        "  File \"/home/runner/work/resilience/resilience/.venv/lib/python3.11/site-packages/kubernetes/client/api_client.py\", line 348, in call_api\n    return self.__call_api(resource_path, method,\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
        "  File \"/home/runner/work/resilience/resilience/.venv/lib/python3.11/site-packages/kubernetes/client/api_client.py\", line 180, in __call_api\n    response_data = self.request(\n                    ^^^^^^^^^^^^^\n",
        "  File \"/home/runner/work/resilience/resilience/.venv/lib/python3.11/site-packages/kubernetes/client/api_client.py\", line 373, in request\n    return self.rest_client.GET(url,\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n",
        "  File \"/home/runner/work/resilience/resilience/.venv/lib/python3.11/site-packages/kubernetes/client/rest.py\", line 244, in GET\n    return self.request(\"GET\", url,\n           ^^^^^^^^^^^^^^^^^^^^^^^^\n",
        "  File \"/home/runner/work/resilience/resilience/.venv/lib/python3.11/site-packages/kubernetes/client/rest.py\", line 238, in request\n    raise ApiException(http_resp=r)\n",
        "kubernetes.client.exceptions.ApiException: (401)\nReason: Unauthorized\nHTTP response headers: HTTPHeaderDict({'Audit-Id': '67305ce1-6435-427c-a1ac-9dd1011adf29', 'Cache-Control': 'no-cache, private', 'Content-Type': 'application/json', 'Date': 'Tue, 02 Jul 2024 08:59:46 GMT', 'Content-Length': '129'})\nHTTP response body: {\"kind\":\"Status\",\"apiVersion\":\"v1\",\"metadata\":{},\"status\":\"Failure\",\"message\":\"Unauthorized\",\"reason\":\"Unauthorized\",\"code\":401}\n\n\n",
        "\nDuring handling of the above exception, another exception occurred:\n\n",
        "chaoslib.exceptions.ActivityFailed: kubernetes.client.exceptions.ApiException: (401)\nReason: Unauthorized\nHTTP response headers: HTTPHeaderDict({'Audit-Id': '67305ce1-6435-427c-a1ac-9dd1011adf29', 'Cache-Control': 'no-cache, private', 'Content-Type': 'application/json', 'Date': 'Tue, 02 Jul 2024 08:59:46 GMT', 'Content-Length': '129'})\nHTTP response body: {\"kind\":\"Status\",\"apiVersion\":\"v1\",\"metadata\":{},\"status\":\"Failure\",\"message\":\"Unauthorized\",\"reason\":\"Unauthorized\",\"code\":401}\n"
      ],
      "end": "2024-07-02T08:59:46.174465+00:00",
      "duration": 1.134199
    }
  ],
  "rollbacks": [],
  "end": "2024-07-02T08:59:47.221478+00:00",
  "duration": 43.409393548965454
}